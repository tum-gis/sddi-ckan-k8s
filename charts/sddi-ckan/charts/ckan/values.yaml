
# -- Enable/disable CKAN
enabled: true

# -- Role of CKAN in this chart
component: ckan

# -- Override name
nameOverride: ""
# -- Override fullname
fullnameOverride: ckan

image:
  # -- [Image repository](https://kubernetes.io/docs/concepts/containers/images/)
  repository: ghcr.io/tum-gis/ckan-sddi
  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart `appVersion`.
  tag: ""

# -- [Image pull secrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []

# -- Additional pod annotations
podAnnotations: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- [k8s: Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
podSecurityContext: {}
  # fsGroup: 2000

# -- [k8s: Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Type of service for http
  type: ClusterIP
  # -- Service port for http
  port: 5000

# -- Number of replicas. Only used if `autoscaling.enabled = false`.
  # **Note:** Running multiple replicas requires to enable persistent data storage (`persistence.enabled = true`) and,
  # if Pods run on different nodes, a storage that supports RWX.
replicaCount: 1
autoscaling:
  # -- Enable/disable pod autoscaling, if disabled `replicaCount` is used to set number of pods.
  # Check requirements of [HorizontalPodAutoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/).
  enabled: false
  # -- Minimum number of replicas.
  # **Note:** Running multiple replicas requires to enable persistent data storage (`persistence.enabled = true`) and,
  # if Pods run on different nodes, a storage that supports RWX.
  minReplicas: 1
  # -- Maximum number of replicas
  # **Note:** Running multiple replicas requires to enable persistent data storage (`persistence.enabled = true`) and,
  # if Pods run on different nodes, a storage that supports RWX.
  maxReplicas: 5
  # -- [HorizontalPodAutoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/).
  targetCPUUtilizationPercentage:
  # -- [HorizontalPodAutoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/).
  targetMemoryUtilizationPercentage:

ingress:
  # -- Enable/disable Ingress.
  enabled: true
  # -- Name of the [IngressClass](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)
  # to use in Ingress routes.
  className: nginx
  # -- List of [FQDNs](https://de.wikipedia.org/wiki/Fully-Qualified_Host_Name) for this Ingress.
  # Note: All FQDNs will be used for Ingress hosts and TLS certificate. Note: Set `siteUrl` accordingly!
  domains: []
  # -- Additional Ingress annotations
  annotations:
  # -- Additional Ingress annotation for e.g. CORS, timeouts, SSL settings.
  # See [nginx-ingress annotations docs](https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md)
  # for more.
  certManager:
    # -- eMail address for ACME registration with Let's Encrypt. Only used for issuerType = namespace.
    issuerEmail: me@example.com
    # -- Type of [cert-manager](https://cert-manager.io/docs/) Issuer: Use either "namespace" or "cluster".
    issuerType: namespace
    # -- Name of the Issuer to use. For certManager.type = namespace
    # `letsencrypt-staging`, `letsencrypt-prod` and `self-signed` are available.
    issuerName: letsencrypt-staging
  stickySessions:
    # -- Enable/disable sticks sessions, see
    # [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/).
    enabled: false
    sessionCookie:
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      affinityMode: "balanced"
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      changeOnFailure: "true"
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      name: "route"
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      maxAge: "172800"
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      path: "/"
      # -- [Nginx Ingress Controller Sticky sessions](https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/)
      secure: "false"
  cors:
    # -- Enable/disable [CORS](https://de.wikipedia.org/wiki/Cross-Origin_Resource_Sharing).
    # See [ingress-nginx cors settings](https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#enable-cors)
    # for details on CORS configuration and default settings. Use `ingress.annotations` to overwrite the default configuration annotations.
    enabled: true
  tls:
    # -- Specify a custom tls secret name. This overwrites `global.ingress.tls.secretName`.
    secretName:

# General settings
# -- CKAN site url. This should match a domain name of CKAN specified in `ingress.domains`/`global.ingress.domains`
# and include the protocol e.g. (`https://my.domain.de`).
# [CKAN configuration site settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-url)
siteUrl: https://my-ckan.de
# -- Title of the CKAN instance, displayed in Browser windows/tab name
siteTitle: My SDDI CKAN instance
# -- [CKAN config site_id](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-id)
siteId: default
# -- [CKAN config site_id](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-description)
siteDescription: This is my SDDI CKAN instance description.
# -- [CKAN config intro text](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-intro-text)
siteIntroText: This is the intro text to my SDDI CKAN instance.
# -- Path to CKAN site logo image. Custom logos will usually be located in `/webassets/`.
# See `webassets.path` setting.
# -- Set [CKAN SDDI intro paragraph](https://github.com/tum-gis/ckanext-grouphierarchy-sddi#personalisation)
siteIntroParagraph: This is the intro paragraph text to my SDDI CKAN instance.
# -- [CKAN config about](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-about)
siteAbout: My CKAN about info. You can use Markdown here.
# -- Local path or URL to
# File path or URL to [CKAN SDDI `init_data.json`](https://github.com/tum-gis/ckanext-grouphierarchy-sddi/blob/main/ckanext/grouphierarchy/init_data.json).
# This file allows to specify pre-defined set of SDDI CKAN main categories, topics, and organizations.
sddiInitDataJson: "init_data.json"
# -- Set URL or path to [CKAN SDDI background image](https://github.com/tum-gis/ckanext-grouphierarchy-sddi#personalisation).
backgroundImage: "../base/images/hero.jpg"
# [CKAN config site_id](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-logo)
siteLogo: /base/images/logo_left.png
# -- Path to CKAN favicon. Custom logos will be located in e.g. `/webassets/`.
# See `webassets.path` setting.
# [CKAN config site_id](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-site-logo)
favicon: /base/images/ckan.ico
# -- Max file upload size in MB. Note: This setting is mapped to the
# `nginx.ingress.kubernetes.io/proxy-body-size: "600m"` and
# `nginx.org/client-max-body-size: "600m"` CKAN Ingress annotations too.
maxUploadSizeMB: 250
# -- [CKAN licences group url](https://docs.ckan.org/en/latest/maintaining/configuration.html#licenses-group-url):
# A URL pointing to a JSON file containing a list of license objects.
licensesGroupUrl: "https://raw.githubusercontent.com/tum-gis/ckanext-grouphierarchy-sddi/main/ckanext/grouphierarchy/licenses_SDDI.json"
# -- [CKAN config dafault_views](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-views-default-views):
# **Note**: Make sure the required view plugins are loaded!
defaultViews: "image_view recline_view text_view geo_view geojson_view wmts_view shp_view"
preview:
  # -- [CKAN config TextView](https://docs.ckan.org/en/latest/maintaining/configuration.html#text-view-settings):
  # Text preview formats.
  textFormats: "txt plain"
  # -- [CKAN config TextView](https://docs.ckan.org/en/latest/maintaining/configuration.html#text-view-settings):
  # XML preview formats.
  xmlFormats: "xml rdf rss"
  # -- [CKAN config TextView](https://docs.ckan.org/en/latest/maintaining/configuration.html#text-view-settings):
  # JSON preview formats.
  jsonFormats: "json"
  # -- [CKAN config TextView](https://docs.ckan.org/en/latest/maintaining/configuration.html#text-view-settings):
  # JSONP preview formats.
  jsonpFormats: "jsonp"
  # -- [CKAN config ImageView](https://docs.ckan.org/en/latest/maintaining/configuration.html#image-view-settings):
  # Image preview formats.
  imageFormats: "png jpeg jpg gif"

featured:
  # -- [CKAN featured groups settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-featured-groups)
  groups: dataset online-application online-service project software method device geoobject
  # -- [CKAN featured orgs settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-featured-orgs)
  orgs: bayerische-vermessungsverwaltung lehrstuhl-fur-geoinformatik bayern-innovativ

form:
  # -- CKAN form settings, see
  # [CKAN configuration form](https://docs.ckan.org/en/latest/maintaining/configuration.html#form-settings)
  create_on_ui_requires_resources: false

# -- Override CKAN plugins/extensions specified in the CKAN image
# Warning: Only edit this if you know what you are doing. If the plugin list does
# not match the plugins installed in the image errors can occur. See
# and [CKAN configuration](https://docs.ckan.org/en/latest/maintaining/configuration.html#)
# [CKAN configuration plugins](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-plugins)
plugins: >-

# envvars image_view text_view recline_view datastore datapusher

auth:
  # -- CKAN authorization settings. See
  # [CKAN configuration docs](https://docs.ckan.org/en/latest/maintaining/configuration.html#authorization-settings).
  allow_dataset_collaborators: false
  anon_create_dataset: false
  create_dataset_if_not_in_organization: false
  create_default_api_keys: false
  create_unowned_dataset: false
  create_user_via_api: false
  create_user_via_web: true
  public_activity_stream_detail: true
  public_user_details: false
  roles_that_cascade_to_sub_groups:  admin editor member
  user_create_groups: false
  user_create_organizations: false
  user_delete_groups: false
  user_delete_organizations: false

sysadmin:
  # -- Enable/disable creating of a CKAN admin user at first startup.
  enabled: true
  # -- CKAN admin username
  user: admin
  # -- CKAN admin password: Note: Min. password length = 8 chars!
  password: changeMe
  # -- CKAN admin eMail address
  email: user@example.de

session:
  # -- [CKAN beaker session secret](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-secret):
  # If left empty, a [64 char random AlphaNum](https://docs.gomplate.ca/functions/random/#random-alphanum) is generated.
  # **Note:** In a cluster environment this values need to be the same on each instance.
  beakerSessionSecret:
  # -- [CKAN beaker session validate key](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-validate-key):
  # If left empty, a [64 char random AlphaNum](https://docs.gomplate.ca/functions/random/#random-alphanum) is generated.
  # **Note:** In a cluster environment this values need to be the same on each instance.
  beakerSessionValidateKey:
  # -- [CKAN beaker session key](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-key),
  # defaults to *ckan* if left empty.
  beakerSessionKey: ckan-session
  # -- [CKAN beaker session type](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-type),
  # -- defaults to "cookie"  if left empty.
  beakerSessionType:
  # -- [CKAN beaker session timeout](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-timeout),
  # -- defaults to 600 if left empty.
  beakerSessionTimeout:
  # -- [CKAN beaker session secure](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-secure),
  # -- defaults to `False` if left empty.
  beakerSessionSecure:
  # -- [CKAN beaker session samesite](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-samesite),
  # -- defaults to "Lax" if left empty.
  beakerSamesite:
  # -- [CKAN beaker session http only](https://docs.ckan.org/en/latest/maintaining/configuration.html#beaker-session-httponly),
  # -- defaults to `True` if left empty.
  beakerSessionHttpOnly:

apiToken:
  # -- [CKAN API token settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#api-token-nbytes)
  nBytes: 64
  # -- [CKAN API token settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#api-token-jwt-algorithm)
  algorithm: HS256
  # -- [CKAN API token settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#api-token-jwt-encode-secret):
  # If left empty, a random 64 char alpha numeric string is generated.
  # **Note:** In a production environment the default needs to be overwritten.
  # Check the docs! Depending on `apiToken.algorithm` additional restrictions apply to this settings.
  encodeSecret:
  # -- [CKAN API token settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#api-token-jwt-decode-secret):
  # If left empty, a random 64 char alpha numeric string is generated.
  # **Note:** In a production environment the default needs to be overwritten.
  # Check the docs! Depending on `apiToken.algorithm` additional restrictions apply to this settings.
  decodeSecret:

locale:
  # -- CKAN default locale, see
  # [CKAN internationalization settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#internationalisation-settings)
  default: de
  # -- CKAN locale order, see
  # [CKAN internationalization settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#internationalisation-settings)
  order: de en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
  # -- CKAN locales offered, see
  # [CKAN internationalization settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#internationalisation-settings)
  offered: de en
  # -- CKAN locales filtered out, see
  # [CKAN internationalization settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#internationalisation-settings)
  filtered_out: en_GB

webassets:
  # -- Webassets storage path, see
  # [CKAN webassets settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#webassets-settings)
  # This should point to the location of webassets in the CKAN image. The path may vary depending on the
  # CKAN Docker image used.
  path:

# -- Extra environment variables. Values need to be quoted. This can be used to overwrite or
# extend [CKAN settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-configuration-file).
# See [ckanext-envvars](https://github.com/okfn/ckanext-envvars) for variable naming conventions.
extraEnv: {}
  # CKAN___SOME_VARIABLE: "someValues"

# Persistence -----------------------------------------------------------------
persistence:
  # -- Enable/disable persistent data storage. Note: Persistence should only be disabled for testing!
  # With persistence disabled CKAN data is stored in an ephemeral emptyDir volume!
  enabled: true
  # -- StorageClass to use, leave empty to use default StorageClass.
  storageClassName:
  # -- Mount path of the CKAN storage. Omit trailing `/`! This option is used
  # for CKAN__STORAGE_PATH env var too!
  storagePath: /var/lib/ckan
  accessModes:
  # -- [k8s: Persistent volume access modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
    - ReadWriteOnce
  # -- Storage [capacity](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#capacity)
  capacity: 4Gi
  # -- Additional annotations for PVCs
  # Set `helm.sh/resource-policy: keep` to avoid deletion of PVCs on helm upgrade/uninstall
  annotations:
  # helm.sh/resource-policy: keep

# CKAN database ---------------------------------------------------------------
db:
  # -- CKAN database host, used to build `sqlalchemy.url` see
  # [CKAN database settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#database-settings)
  host: postgis
  # -- CKAN database port, used to build `sqlalchemy.url` see
  # [CKAN database settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#database-settings)
  port: 5432
  # -- CKAN database database name, used to build `sqlalchemy.url` see
  # [CKAN database settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#database-settings)
  dbname: ckan_default
  auth:
  # -- CKAN database username, used to build `sqlalchemy.url` see
  # [CKAN database settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#database-settings)
    username: ckan
  # -- CKAN database password, used to build `sqlalchemy.url` see
  # [CKAN database settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#database-settings)
    password: changeMe

# Datastore -------------------------------------------------------------------
datastore:
  # -- CKAN datastore host, used to build `ckan.datastore.read/write_url` see
  # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
  host: postgis
    # -- CKAN datastore port, used to build `ckan.datastore.read/write_url` see
  # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
  port: 5432
    # -- CKAN datastore database name, used to build `ckan.datastore.read/write_url` see
  # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
  dbname: datastore
  auth:
    ro:
      # -- CKAN datastore read only username, used to build `ckan.datastore.read_url` see
      # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
      username: datastore_ro
      # -- CKAN datastore read only password, used to build `ckan.datastore.read_url` see
      # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
      password: changeMe
    rw:
      # -- CKAN datastore read write username, used to build `ckan.datastore.write_url` see
      # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
      username: datastore_rw
      # -- CKAN datastore read write password, used to build `ckan.datastore.write_url` see
      # [CKAN datastore settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datastore-settings)
      password: changeMe

# Redis -----------------------------------------------------------------------
redis:
  # -- Redis endpoint for CKAN.
  # This should be set to cluster internal Redis service domain.
  # [CKAN configuration Redis](https://docs.ckan.org/en/latest/maintaining/configuration.html#redis-settings)
  url: redis://redis-hl:6379/0

# Solr ------------------------------------------------------------------------
solr:
  # -- Solr endpoint for CKAN.
  # This should be set to cluster internal Solr service domain.
  # [CKAN configuration Solr URL](https://docs.ckan.org/en/latest/maintaining/configuration.html#solr-url)
  url: http://solr-hl:8983/solr/ckan
  # -- # [CKAN configuration Solr user](https://docs.ckan.org/en/latest/maintaining/configuration.html#solr-user)
  user:
  # -- # [CKAN configuration Solr user](https://docs.ckan.org/en/latest/maintaining/configuration.html#solr-password)
  password:

# DataPusher ------------------------------------------------------------------
datapusher:
  # -- Datapusher API token, see
  # [CKAN Datapusher settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#datapusher-settings)
  apiToken:
  # -- This should be set to cluster internal ckan service domain.
  # [CKAN DataPusher settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-datapusher-callback-url-base)
  callback_url_base: http://ckan:5000/
  formats: "csv xls tsv application/csv"
  # -- DataPusher endpoint of CKAN. This should be set to the cluster internal DataPusher service domain.
  url: http://datapusher:8000/

smtp:
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  # **Note:** To use SSL auth, omit the port in the server string, if it is the default port 465. Also make
  # sure to set `smtp.startTls = True`.
  server: "smtpServerURLorIP:port"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  user: "smtpUser"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  password: "smtpPassword"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  mailFrom: "postmaster@domain.com"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  # **Note:** To use SSL auth, make sure this settings is set to `True`. See the note for `smtp.server` too.
  startTls: "True"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  replyTo: "None"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  emailTo: "None"
  # -- [CKAN SMTP settings](https://docs.ckan.org/en/latest/maintaining/configuration.html#email-settings)
  errorEmailFrom: "None"

activityStreams:
  # -- [CKAN config enable activity streams](https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-activity-streams-enabled)
  enabled: True
  # -- [CKAN config activity stream](https://docs.ckan.org/en/latest/maintaining/configuration.html#activity-streams-settings)
  emailNotifications: True

clamav:
  enabled: true
  uploadUnscanned: "False"
  host: clamav
  port: 3310
  timeout: 360

resources:
  limits:
    # -- [k8s: Resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
    cpu: 500m
    # -- [k8s: Resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
    memory: 1Gi
  requests:
    # -- [k8s: Resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
    cpu: 250m
    # -- [k8s: Resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
    memory: 256Mi

# -- [k8s: Assign pods to nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}
# -- [k8S: Taints and tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []
# -- [k8s: Assign pods to nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: {}

startup:
  # -- Inital delay seconds for the startup probe.
  initialDelaySeconds: 2
  # -- Check interval for the startup probe
  periodSeconds: 2
  # -- Failure threshold for the startup probe
  failureThreshold: 200
  # -- Timeout interval for the startup probe
  timeoutSeconds: 2
readiness:
  # -- Initial delay for the liveness probe
  initialDelaySeconds: 20
  # -- Check interval for the liveness probe
  periodSeconds: 10
  # -- Failure threshold for the liveness probe
  failureThreshold: 6
  # -- Timeout interval for the liveness probe
  timeoutSeconds: 10
liveness:
  # -- Initial delay for the liveness probe
  initialDelaySeconds: 20
  # -- Check interval for the liveness probe
  periodSeconds: 10
  # -- Failure threshold for the liveness probe
  failureThreshold: 6
  # -- Timeout interval for the liveness probe
  timeoutSeconds: 10
