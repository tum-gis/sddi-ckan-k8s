{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "solr.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "solr.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: sddi-ckan
    app.kubernetes.io/component: {{ .Values.component }}
spec:
  serviceName: {{ include "solr.fullname" . }}-hl
  selector:
    matchLabels:
      {{- include "solr.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Values.component }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "solr.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Values.component }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "solr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      volumes:
      {{- if .Values.volumes }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.volumes  "context" $ ) | nindent 8 }}
      {{- end }}

      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes  "context" $ ) | nindent 8 }}
      {{- end }}

      {{- if and .Values.additionalSearchFields.enabled .Values.additionalSearchFields.fields }}
      - name: search-fields-config
        configMap:
          name: {{ include "solr.fullname" . }}-search-fields
      {{- end }}
      initContainers:
      {{- if .Values.initContainers }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers  "context" $ ) | nindent 8 }}
      {{- end }}

      {{- if and .Values.additionalSearchFields.enabled .Values.additionalSearchFields.fields }}
      - name: init-search-fields
        image: alpine:latest
        command:
          - sh
          - -c
          - |
            # Wait for the data volume to be ready and copy the initial schema if needed
            if [ ! -f /var/solr/data/ckan/conf/managed-schema ]; then
              echo "Waiting for Solr data initialization..."
              sleep 10
            fi

            # Check if the schema file exists
            SOLR_SCHEMA_FILE="/var/solr/data/ckan/conf/managed-schema"
            if [ -f "$SOLR_SCHEMA_FILE" ]; then
              echo "Adding additional search fields to managed-schema..."

              # Read additional fields from the config file
              while IFS= read -r line; do
                if [ -n "$line" ] && [ "$line" != "    " ]; then
                  # Remove leading whitespace and add the field after <fields> tag
                  CLEAN_LINE=$(echo "$line" | sed 's/^[[:space:]]*//')
                  sed -i "/<fields>/a\\  $CLEAN_LINE" "$SOLR_SCHEMA_FILE"
                  echo "Added field: $CLEAN_LINE"
                fi
              done < /tmp/search-fields/search-fields.xml

              echo "Additional search fields have been added to the schema."
            else
              echo "Warning: Schema file not found at $SOLR_SCHEMA_FILE"
            fi
        volumeMounts:
          - name: data
            mountPath: /var/solr/data
          - name: search-fields-config
            mountPath: /tmp/search-fields
            readOnly: true
      {{- end }}

      {{- if .Values.extraInitContainers }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.extraInitContainers  "context" $ ) | nindent 8 }}
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CKAN_CORE_NAME
              value: "ckan"
          ports:
            - name: solr
              containerPort: 8983
              protocol: TCP

          volumeMounts:
          {{- if .Values.volumeMounts }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.volumeMounts  "context" $ ) | nindent 10 }}
          {{- end }}

          {{- if .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts  "context" $ ) | nindent 10 }}
          {{- end }}

          livenessProbe:
            periodSeconds: 10
            timeoutSeconds: 3
            tcpSocket:
              port: 8983

          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            tcpSocket:
              port: 8983

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
