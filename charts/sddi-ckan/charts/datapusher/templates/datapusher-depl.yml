{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datapusher.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "datapusher.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: sddi-ckan
    app.kubernetes.io/component: {{ .Values.component }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "datapusher.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Values.component }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/datapusher-configMap.yml") . | sha256sum }}
        checksum/secret-db: {{ include (print $.Template.BasePath "/datapusher-sct-db.yml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "datapusher.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Values.component }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "datapusher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      volumes:
        - name: config
          configMap:
            name: {{ include "datapusher.fullname" . }}

      {{- if .Values.global.datapusher.db.enabled | default .Values.db.enabled }}
      initContainers:
      - name: pg-ready
        image: "{{ .Values.initContainers.pgready.image.repository }}:{{ .Values.initContainers.pgready.image.tag }}"
        command:
          - pg_isready
        env:
          - name: PGHOST
            value: {{ .Values.global.datapusher.db.host | default .Values.db.host | quote }}
          - name: PGPORT
            value: {{ .Values.global.datapusher.db.port | default .Values.db.port | quote }}
          - name: PGDATABASE
            value: {{ .Values.global.datapusher.db.dbname | default .Values.db.dbname | quote }}
          - name: PGUSER
            value: {{ .Values.global.datapusher.db.auth.username | default .Values.db.auth.username | quote }}
          - name: PGPASSWORD
            value: {{ .Values.global.datapusher.db.auth.password | default .Values.db.auth.password | quote }}
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP

          envFrom:
            - configMapRef:
                name: {{ include "datapusher.fullname" . }}
            - secretRef:
                name: {{ include "datapusher.fullname" . }}-sct-db

          livenessProbe:
            httpGet:
              path: /
              port: 8000
          readinessProbe:
            httpGet:
              path: /
              port: 8000

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
